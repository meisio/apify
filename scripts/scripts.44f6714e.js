"use strict";angular.module("apifyApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","hljs","hc.marked","ui.bootstrap"]).config(["$routeProvider","hljsServiceProvider","markedProvider",function(a,b,c){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"}),c.setOptions({gfm:!0,tables:!0,highlight:function(a,c){return c?b.highlight(c,a,!0).value:b.highlightAuto(a).value}}),c.setRenderer({link:function(a,b,c){return'<a href="'+a+'"'+(b?' title="'+b+'"':"")+' target="_blank">'+c+"</a>"}})}]).run(["$templateCache","apiService",function(a,b){b.add({name:"semantics3",url:"https://www.semantics3.com/"})}]),angular.module("apifyApp").controller("MainCtrl",["$scope","$route","apiService",function(a,b,c){a.$route=b,a.api=void 0,a.apis=[],a.find=c.find,a.$on("langSelected",function(b,c){a.selectedLang=c})}]),angular.module("apifyApp").controller("AboutCtrl",["$scope","$route",function(a,b){a.$route=b}]),angular.module("apifyApp").directive("api",["$templateCache","$compile","$interpolate","$rootScope","apiService",function(a,b,c,d,e){return{require:"^apiParent",scope:{name:"@",lang:"@",platform:"@"},restrict:"E",transclude:!1,link:function(a,d){a.selectedLang="info";var f=a.$parent.$parent.service.name,g={name:f,lang:a.lang,platform:a.platform};e.add(g);var h;h="info"===g.lang?angular.element(['<div class="code" ng-show="selectedLang == \''+g.lang+"'\">","<markdown>",d.text(),"</markdown>","</div>"].join("")):angular.element(['<div class="code" hljs hljs-interpolate="true" ng-show="selectedLang == \''+g.lang+"'\">",c(d.html())(a),"</div>"].join("")),d.replaceWith(b(h)(a)),a.$on("langSelected",function(b,c){console.log(c),a.selectedLang=c})}}}]),angular.module("apifyApp").service("apiService",function(){var a=this,b=new Map,c=function(a){return(void 0!==a&&null!==a?a:"").toLowerCase()};Array.prototype.checkAndAdd=function(a){this.contains(a)||this.push(a)},Array.prototype.contains=function(a){for(var b=!1,c=0;c<this.length;c++)if(this[c].lang===a.lang&&this[c].platform===a.platform){b=!0;break}return b},Map.prototype.checkAndAdd=function(a,b){return null===a||void 0===a?console.log("Name undefined!"):(a=a.toLowerCase(),this.has(a)||this.set(a,{name:a,apis:[],str:a,providerURL:void 0!==b?b.url:"#",url:"/api/"+a+".html"}),this.get(a))},this.getAll=function(){},this.get=function(c,d){var e=b.get(c);return void 0===e&&d&&(e=a.add(c)),e},this.add=function(a){var d=b.checkAndAdd(a.name,{url:a.url}),e=c(a.lang),f=c(a.platform);if(!(null!==e&&void 0!==e&&0!==e.length||null!==f&&void 0!==f&&0!==f.length))return console.log("Lang and platform undefined!");var g={name:d.name,lang:e,platform:f,str:d.name};e.length>0&&(g.str=[g.str,e].join(" ")),f.length>0&&(g.str=[g.str,f].join(" ")),d.apis.checkAndAdd(g)},this.find=function(a,c,d){for(var e,f=void 0!==c?c:10,g=[],h=a.toLowerCase().split(/\s+/),i="(?=.*"+h.join(")(?=.*")+")",j=a.toLowerCase().replace(/\s+/g,"|"),k=new RegExp("AND"===d?i:j,"i"),l=b.entries();!(e=l.next()).done;){var m=e.value[1];if(k.test(m.str)&&g.push(m),g.length===f)break}return g}}),angular.module("apifyApp").directive("markdown",["$compile",function(a){return{scope:{},restrict:"E",transclude:!1,link:function(b,c){var d=angular.element(['<div class="code markdown">',"<pre>","<code marked>",c.html(),"</code>","</pre>","</div>"].join(""));c.replaceWith(a(d)(b))}}}]),angular.module("apifyApp").directive("apiParent",function(){return{scope:{service:"="},template:'<div class="api"><div class="languages"><ul class="list-inline"><li ng-repeat="item in service.apis" ng-class="{\'active\':isSelectedLang(item.lang)}" ng-click="onLangClick(item)"><a href="">{{item.lang}}</a></li></ul></div><div class="row code-block"><ng-include src="service.url"></ng-include></div>',restrict:"AE",replace:!0,controller:["$scope",function(a){a.selectedLang="info",a.onLangClick=function(b){a.selectedLang=b.lang,a.$broadcast("langSelected",a.selectedLang)},a.isSelectedLang=function(b){return a.selectedLang===b},a.$broadcast("langSelected",a.selectedLang)}]}}),angular.module("apifyApp").run(["$templateCache",function(a){a.put("api/semantics3.html",'<api lang="info"> ##### Before you start You need to [signup](https://www-dashboard.semantics3.com/signup?) and recieve an API key and a secret in order to query the semantics3 pull API. </api> <api lang="curl"> curl -G -H "api_key: SEM3xxxxxxxxxxxxxxxxxx" \\ https://api.semantics3.com/test/v1/products \\ --data-urlencode \'q={"search": "Samsung Galaxy"}\' </api> <api lang="perl"> #To install \'perl -MCPAN -e "install Net::Semantics3"\' (Github: https://github.com/Semantics3/semantics3-perl) use Net::Semantics3::Products; use Data::Dumper; my $sem3 = Net::Semantics3::Products->new ( api_key => \'SEM3xxxxxxxxxxxxxxxxxx\', api_secret => \'xxxxxxxxxxxxxxxxxxxxxxxx\', ); $sem3->products_field( "search", "Samsung Galaxy" ); my $productsRef = $sem3->get_products(); print STDERR "Results of query:\\n", Dumper( $productsRef ); </api> <api lang="python"> #To install: \'pip install semantics3\' (Github: https://github.com/Semantics3/semantics3-python) from semantics3 import Products products = Products( api_key = "SEM3xxxxxxxxxxxxxxxxxxxxxx", api_secret = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" ) products.products_field( "search", "Samsung Galaxy" ) results = products.get_products(); print "Results of query:\\n", results; </api> <api lang="php"> //To install: \'php composer.phar install\' (Github: https://github.com/Semantics3/semantics3-php) require(\'lib/Semantics3.php\'); $key = \'SEM3xxxxxxxxxxxxxxxxxxxxxx\'; $secret = \'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\'; $requestor = new Semantics3_Products($key,$secret); $requestor->products_field("search", "Samsung Galaxy"); $results = $requestor->get_products(); echo $results; </api> <api lang="javascript" platform="Node.js"> //To install: \'npm install semantics3-node\' (Github: https://github.com/Semantics3/semantics3-node) var api_key = \'SEM3xxxxxxxxxxxxxxxxxx\'; var api_secret = \'xxxxxxxxxxxxxxxxxxxxxxxx\'; var sem3 = require(\'semantics3-node\')(api_key,api_secret); sem3.products.products_field( "search", "Samsung Galaxy" ); sem3.products.get_products( function(err, products) { if (err) { console.log("Couldn\'t execute query: get_products"); return; } console.log("Results of query:\\n" + JSON.stringify( products )); } ); </api> <api lang="ruby"> #To install: \'gem install semantics3\' (Github: https://github.com/Semantics3/semantics3-ruby) require \'rubygems\' require \'semantics3\' API_KEY = \'SEM3xxxxxxxxxxxxxxxxxx\' API_SECRET = \'xxxxxxxxxxxxxxxxxxxxxxxx\' sem3 = Semantics3::Products.new(API_KEY,API_SECRET) sem3.products_field( "search", "Samsung Galaxy" ) productsHash = sem3.get_products puts "Results of query:\\n",productsHash.to_json </api> <api lang="java"> //To include, Github: https://github.com/Semantics3/semantics3-java import com.semantics3.api.Products; Products products = new Products( "SEM3xxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" ); products .productsField( "search", "Samsung Galaxy" ) JSONObject results = products.getProducts(); System.out.println(results); </api> <api lang="c#"> //To include, Github: https://github.com/Semantics3/semantics3-csharp using System; using System.Collections.Generic; using Semantics3; using Newtonsoft.Json; using Newtonsoft.Json.Linq; namespace MyApp { class Program { static void Main(string[] args) { Products products = new Products("apikey", "apisecret"); products.products_field("search", "Samsung Galaxy"); JObject apiResponse = products.get_products(); Console.Write(apiResponse.ToString()); } } } </api>')}]);